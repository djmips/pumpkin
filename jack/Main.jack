// Pumpkin
// by David Galloway 2019 

// Halloween version of Pigs on Head 
// on the Hack hardware platform programmed in Jack
// For OrcaJam 2019 at Fort Tectoria in Victoria BC


class Main {

    static int screenLocation;
    static int keyboard;


    function void main() {

	// Variable Declarations

	// ... Arrays for communicating data between modules
	//var Array playerLocation;

	// ... Variables for managing the game
	var char key;
	var boolean exit, moved;
	var int i, location, oldLocation, memAddress;
    var int cooldown;
	var String endText, scoreText;

	// Array initialisations
	//let playerLocation = Array.new(7);

	// Class initialisations
	//do Display.init();

	// Initialisation of game variables
	let key = 0;               /* which key the user pressed*/
	let moved = true;          /* only updates the display if an action took place */
	let exit = false;          /* whether the game is over*/
    let cooldown = 4000;

    let oldLocation = 0;
    let location = 2048;    /* starting pos for player */

    let screenLocation = 16384;
    let keyboard = 24576;


	// Start Up Screen

    // wait for any key
	//while (~(key = 0)) { let key = Keyboard.keyPressed(); }
	//while (key = 0)    { let key = Keyboard.keyPressed(); }
	//while (~(key = 0)) { let key = Keyboard.keyPressed(); }

	// MAIN LOOP
	while (~exit) {

	    // User Input
	    // (up-arrow)
	    if (key = 131) {
            let oldLocation = location;
            let location = location - 512;
		    let moved = true; 
        }

	    // (down-arrow)
	    if (key = 133) {        
            let oldLocation = location;
            let location = location + 512;
		    let moved = true; 
        }

	    // (left-arrow)
	    if (key = 130) {
            let oldLocation = location;
            let location = location - 2;
		    let moved = true; 
        }
	    // (right-arrow)
	    if (key = 132) {
            let oldLocation = location;
            let location = location + 2;
		    let moved = true;
	    }

	    // Only update if an action has occurred
	    if (moved) {
		
            // Render all of the screen elements

            // Draw a pumpkin

            let memAddress = location;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 384; 
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 384;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 8176;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 16380;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 32766;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 31710;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = -3697; 
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = -1;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = -4105;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 29262;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 30750;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 16380;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 4080;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;            


            // Erase a pumpkin
            let memAddress = oldLocation;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0; 
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0; 
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;       



            // draw something static
            let screenLocation[3887] = (~32767); 
            let screenLocation[3888] = 1; 
            let screenLocation[3919] = (~32767); 
            let screenLocation[3920] = 1; 
            let screenLocation[3951] = (~32767);
            let screenLocation[3952] = 1; 
            let screenLocation[3983] = (~32767);
            let screenLocation[3984] = 1; 
            let screenLocation[4015] = (~32767);
            let screenLocation[4016] = 1; 
            let screenLocation[4047] = (~32767);
            let screenLocation[4048] = 1; 
            let screenLocation[4079] = -512; 
            let screenLocation[4080] = 127; 
            let screenLocation[4111] = -512; 
            let screenLocation[4112] = 127; 
            let screenLocation[4143] = (~32767);
            let screenLocation[4144] = 1; 
            let screenLocation[4175] = (~32767);
            let screenLocation[4176] = 1; 
            let screenLocation[4207] = (~32767);
            let screenLocation[4208] = 1; 
            let screenLocation[4239] = (~32767);
            let screenLocation[4240] = 1; 
            let screenLocation[4271] = (~32767);
            let screenLocation[4272] = 1; 
            let screenLocation[4303] = (~32767);
            let screenLocation[4304] = 1; 

            
            //do Display.scores(targets, steps);
            let key = 0;
            let cooldown = 4000;

	    } // END IF (moved or bullet)

	    // End the loop and update the key presses
	    let moved = false;
        if (cooldown > -1) {
            let cooldown = cooldown - 1;
        }else {
	        let key = keyboard[0];
        }

	    // Quit Game (Q)
	    if ((key = 81) | (key = 113))  {
		let exit = true;
	    }
	    
	} // END WHILE (main loop)

	// GAME OVER - Render one or other of the splash screens
	//do Screen.clearScreen();

	// Wait for a key press before quitting
	//while (~(key = 0)) {
	//    let key = Keyboard.keyPressed();
	//}
	//while ((~(key = 32)) & (~(key = 81)) & (~(key = 113))) {
	//    let key = Keyboard.keyPressed();
	//}

	// CLEAN UPS
	//do playerLocation.dispose();

	return;

    } // END FUNCTION (main)

} // END CLASS (Main)
