// Pumpkin
// by David Galloway 2019 

// Halloween version of Pigs on Head 
// on the Hack hardware platform programmed in Jack
// For OrcaJam 2019 at Fort Tectoria in Victoria BC


class Main {

    static Array screenLocation;
    static int keyboard;
    static int LFSR, nLFSR;
    static int tick;
    static int heap;


    function void main() {

	// Variable Declarations

	// ... Arrays for communicating data between modules
	var Array pumpkinLocY; 
    var Array oldPumpkinLocY;
	var Array pumpkinColumn;
    var Array pumpkinFrame;

	// ... Variables for managing the game
	var char key;
	var boolean exit, moved, pmoved;
	var int i, location, oldLocation, memAddress;
    var int cooldown;
	var String endText, scoreText;
    var int pumpkinTick;
    var int temp;


    // statics
    let screenLocation = 16384;
    let keyboard = 24576;
    let LFSR = 1;
    let nLFSR = 254;
    let tick = 0;
    let heap = 8192;

    // Clear screen
    let i = 0;
    while( i < 8192 ) {
        let screenLocation[i] = 0;
        let i = i + 1;
    }

	// Array initialisations

    //------------------------
	let pumpkinLocY = heap; 
    let heap = heap + 12;

    let pumpkinLocY[0] = 1024; //2*512;
    let pumpkinLocY[1] = 1536; //3*512;
    let pumpkinLocY[2] = 3072; //6*512;
    let pumpkinLocY[3] = 4096; //8*512;
    let pumpkinLocY[4] = 0;    //0*512;
    let pumpkinLocY[5] = 2560; //5*512;
    let pumpkinLocY[6] = 4608; //9*512;
    let pumpkinLocY[7] = 1536; //3*512;
    let pumpkinLocY[8] = 512;  //1*512;
    let pumpkinLocY[9] = 3584; //7*512;
    let pumpkinLocY[10] = 2048; //4*512;
    let pumpkinLocY[11] = 3072; //6*512; 

    //------------------------
    let oldPumpkinLocY = heap;
    let heap = heap + 12;

    let i = 0;
    while (i < 12) {
        let oldPumpkinLocY[i] = 0;
        let i = i + 1;
    }

    //------------------------
	let pumpkinColumn = heap;
    let heap = heap + 12;

    let pumpkinColumn[0] = 4;
    let pumpkinColumn[1] = 6;
    let pumpkinColumn[2] = 8;
    let pumpkinColumn[3] = 10;
    let pumpkinColumn[4] = 12;
    let pumpkinColumn[5] = 14;
    let pumpkinColumn[6] = 16;
    let pumpkinColumn[7] = 18;
    let pumpkinColumn[8] = 20;
    let pumpkinColumn[9] = 22;
    let pumpkinColumn[10] = 24;
    let pumpkinColumn[11] = 26;


    //------------------------
    let pumpkinFrame = heap;
    let heap = heap + 12;

	// Class initialisations
	//do Display.init();

	// Initialisation of game variables
	let key = 0;               /* which key the user pressed*/
	let moved = true;          /* only updates the display if an action took place */
    let pmoved = true;
	let exit = false;          /* whether the game is over*/
    let cooldown = 4000;

    let oldLocation = 18;
    let location = 0;    /* starting pos for player */

    let pumpkinTick = tick;


	// Start Up Screen

    // wait for any key
	//while (~(key = 0)) { let key = Keyboard.keyPressed(); }
	//while (key = 0)    { let key = Keyboard.keyPressed(); }
	//while (~(key = 0)) { let key = Keyboard.keyPressed(); }

	// MAIN LOOP
	while (~exit) {

        let tick = tick + 1;

        // 8 bit random LFSR
        let LFSR = LFSR + LFSR;
        if (LFSR & 256)
        {
            // A xor B = (A or B) and (A' or B')
            // 29 magic 
            // 226 = ~29 
            let nLFSR = ~LFSR;
            let LFSR = (LFSR | 29) & (nLFSR | 226);
        }
        let LFSR = LFSR & 255;

        // update pumpkins

        if ((tick - pumpkinTick) > 2000)
        {
            let i = 0;
            while (i < 12) {
                let oldPumpkinLocY[i] = pumpkinLocY[i]; 
                let pumpkinLocY[i] = pumpkinLocY[i] + 512;
                if (pumpkinLocY[i] > 4096) {
                    let pumpkinLocY[i] = 0;
                } 
                // Move on to the next i
                let i = i + 1;
            } // While i 

            let pmoved = true;
        }


	    // User Input ///////////////////////////////////////

	    // (a) Left
	    if (key = 65) {
            if (location > -1)
            {
                let oldLocation = location;
                let location = location - 2;
		        let moved = true;
            } 
        }

        // (d) Right
	    if (key = 68) {
            if (location < 20)
            {
                let oldLocation = location;
                let location = location + 2;
		        let moved = true;
            }
	    }

		
            // Render all of the screen elements

//////////////////////////////////////////////////////////////////////////////////////////////
        // Draw pumpkins

        if (pmoved) {

            let i = 0;
            while (i < 12) {
 
            if (0) {
            
                let memAddress = pumpkinLocY[i] + pumpkinColumn[i];
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 384; 
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 384;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 8176;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 16380;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 32766;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 31710;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = -3697; 
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = -1;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = -4105;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 29262;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 30750;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 16380;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 4080;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;            
            }

                let memAddress = pumpkinLocY[i] + pumpkinColumn[i];
                let screenLocation[memAddress]=0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=3888;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=8160;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=16368;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=30968;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=30972;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=28302;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=28558;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=29166;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=14846;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=7230;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=3868;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=1020;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=240;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress]=0;
                let memAddress = memAddress + 32;


                if (1) {
                // Erase old pumpkin location
                let memAddress = oldPumpkinLocY[i] + pumpkinColumn[i];
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0; 
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0; 
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;
                let memAddress = memAddress + 32;
                let screenLocation[memAddress] = 0;   

                }

                // Move on to the next i
                let i = i + 1;

            } // While i 

            let pmoved = false;
            let pumpkinTick = tick;
        }

	    // Only update if an action has occurred
	    if (moved) {

///////////////////////////////////////////////////////////////////////////////////////////

            // Draw main player
            let memAddress = location + 4614;
            let screenLocation[memAddress]=0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=504;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=2044;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=3454;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=3006;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=16382;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=16382;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=16254;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=1276;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=496;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=96;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=-24336;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=-16;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=240;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=-24336;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=-16;
            let memAddress = memAddress + 32;

            // legs
            let screenLocation[memAddress]=496;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=496;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=496;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=432;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=304;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=272;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=280;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=396;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=1950;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress]=0;
            let memAddress = memAddress + 32;


            if (1) {
            // Erase old player location
            let memAddress = oldLocation + 4614;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0; 
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0; 
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;   
            let memAddress = memAddress + 32;

            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0; 
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0; 
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;   
            let memAddress = memAddress + 32;
            let screenLocation[memAddress] = 0;

            } // for disabling
            
            //do Display.scores(targets, steps);
            let key = 0;
            let cooldown = 1000;
            let moved = false;

	    } //  moved

	    // End the loop and update the key presses
        if (cooldown > -1) {
            let cooldown = cooldown - 1;
        }else {
	        let key = keyboard[0];
        }

	    // Quit Game (Q)
	    if ((key = 81) | (key = 113))  {
		let exit = true;
	    }
	    
	} // END WHILE (main loop)

	// GAME OVER - Render one or other of the splash screens
	//do Screen.clearScreen();

	// Wait for a key press before quitting
	//while (~(key = 0)) {
	//    let key = Keyboard.keyPressed();
	//}
	//while ((~(key = 32)) & (~(key = 81)) & (~(key = 113))) {
	//    let key = Keyboard.keyPressed();
	//}

	// CLEAN UPS
	//do playerLocation.dispose();

	return;

    } // END FUNCTION (main)

} // END CLASS (Main)
